View(fcstRBind)
View(fcstRBind)
####################################################
# Estimation et forecast full-sample
####################################################
# Parametres: NB de lags du VAR et niveau de l'intervalle de confiance pour la prevision
nlags<-14
ConfidenceLevel <- 0.9
# Preparation du dataset
OutofSample<-0
HorizonForecast<-7*(2)
LengthGraph <- 3*30 # longueur des graphiques
debFcst<-LastObsCas-OutofSample
dateFcst<-seq(from = as.Date(LastObs-OutofSample+1), to = as.Date(LastObs-OutofSample+HorizonForecast), by = 'day')
FirstDayFcst<-debFcst+1
DataEpiVAR <- db %>%
mutate(R = log(REpiEstim/lag(REpiEstim,1))) %>%
mutate(cas = log(cas_sm/lag(cas_sm,1))) %>%
mutate(hosp = log(hosp_sm/lag(hosp_sm,1))) %>%
mutate(rea = log(rea_sm/lag(rea_sm,1))) %>%
mutate(dc = log(dc_sm/lag(dc_sm,1))) %>%
filter(date < LastObs-OutofSample) %>%
subset(select = c(R,cas,hosp,rea,dc)) %>%
na.omit %>%
ts()
# Estimation VAR
EpiVAR<-VAR(DataEpiVAR,
p=nlags,
type="trend")
summary(EpiVAR)
# Test de stabilité du VAR
if ( max(roots(EpiVAR))<1 ) {
print("EpiVAR is stationary")
print(paste("Max root =", round(max(roots(EpiVAR)) , 2) ))
} else {
print("EpiVAR is non stationary!")
print(paste("Max root =", round(max(roots(EpiVAR)) , 2) ))
exit()
}
# checkresiduals(EpiVAR$varresult$R)
# checkresiduals(EpiVAR$varresult$cas)
# checkresiduals(EpiVAR$varresult$hosp)
# checkresiduals(EpiVAR$varresult$rea)
# checkresiduals(EpiVAR$varresult$dc)
# Forecasts
Forecast<-predict(EpiVAR,
n.ahead = HorizonForecast,
pi = ConfidenceLevel,
dumvar = NULL)
# Plots forecasts
fcstR <-exp(cumsum(as.data.frame(Forecast$fcst$R)))
fcstR$date<- dateFcst
fcstRBind<-full_join(db,fcstR)
fcstRBind$fcst<-fcstRBind$fcst*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind$low<-fcstRBind$lower*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind$up<-fcstRBind$upper*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind<-filter(fcstRBind,fcstRBind$date>=as.Date(LastObs-LengthGraph))
gR<-ggplot(data=fcstRBind) +
geom_line(aes(x=date, y = REpiEstim, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up, fill="Intervalle de prévision"), alpha = 0.2)  +
geom_hline(yintercept = 1, size = 0.2) +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL , title = "Taux de reproduction effectif (Reff)")
fcstcas <-exp(cumsum(as.data.frame(Forecast$fcst$cas)))
fcstcas$date<-dateFcst
fcstcasBind<-full_join(db,fcstcas)
fcstcasBind$fcst<-fcstcasBind$fcst*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind$low<-fcstcasBind$lower*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind$up<-fcstcasBind$upper*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind<-filter(fcstcasBind,fcstcasBind$date>=as.Date(LastObs-LengthGraph))
gcas<-ggplot(data=fcstcasBind) +
geom_col(aes(x=date, y = cas), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = cas_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up, fill="Intervalle de prévision"), alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
scale_y_continuous(labels = label_number(suffix = " k", scale = 1e-3) ) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL , title = "Cas confirmés (date de prélèvement)")
fcsthosp <-exp(cumsum(as.data.frame(Forecast$fcst$hosp)))
fcsthosp$date<-dateFcst
fcsthospBind<-full_join(db,fcsthosp)
fcsthospBind$fcst<-fcsthospBind$fcst*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind$low<-fcsthospBind$lower*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind$up<-fcsthospBind$upper*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind<-filter(fcsthospBind,fcsthospBind$date>=as.Date(LastObs-LengthGraph))
ghosp<-ggplot(data=fcsthospBind) +
geom_col(aes(x=date, y = hosp), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = hosp_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL,  title = "Lits en hospitalisation conventionnelle")
fcstrea <-exp(cumsum(as.data.frame(Forecast$fcst$rea)))
fcstrea$date<-dateFcst
fcstreaBind<-full_join(db,fcstrea)
fcstreaBind$fcst<-fcstreaBind$fcst*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind$low<-fcstreaBind$lower*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind$up<-fcstreaBind$upper*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind<-filter(fcstreaBind,fcstreaBind$date>=as.Date(LastObs-LengthGraph))
grea<-ggplot(data=fcstreaBind) +
geom_col(aes(x=date, y = rea), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = rea_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL,y = NULL , title = "Lits en soins critiques")
fcstdc <-exp(cumsum(as.data.frame(Forecast$fcst$dc)))
fcstdc$date<-dateFcst
fcstdcBind<-full_join(db,fcstdc)
fcstdcBind$fcst<-fcstdcBind$fcst*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind$low<-fcstdcBind$lower*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind$up<-fcstdcBind$upper*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind<-filter(fcstdcBind,fcstdcBind$date>=as.Date(LastObs-LengthGraph))
gdc<-ggplot(data=fcstdcBind) +
geom_col(aes(x=date, y = dc), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = dc_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL, title = "Décès hospitaliers")
TitleGraph = paste("Projection EpiVAR à partir du ",FirstDayFcst," (Dernier point observé : ",LastObs,")\n",sep="")
gEpiVAR<-ggarrange(gR,gcas,ghosp,grea,gdc,
ncol=2,
nrow=3,
legend = "bottom",
common.legend = TRUE,
labels = "auto",
align="hv") %>%
annotate_figure( top = text_grob(TitleGraph,
just = "top",
face = "bold",
size = 12),
bottom = text_grob("Source: Santé Publique France. \nModèle et calculs : P. Aldama @paldama.",
hjust = 1,
x = 1,
face = "italic",
size = 10))
ggsave("./gEpiVAR.png", plot=gEpiVAR, bg="white", width = 7, height = 10)
print(gEpiVAR)
# Parametres: NB de lags du VAR et niveau de l'intervalle de confiance pour la prevision
nlags<-14
ConfidenceLevel <- 0.9
# Preparation du dataset
OutofSample<-0
HorizonForecast<-7*(2)
LengthGraph <- 3*30 # longueur des graphiques
debFcst<-LastObsCas-OutofSample
dateFcst<-seq(from = as.Date(debFcst-OutofSample+1), to = as.Date(debFcst-OutofSample+HorizonForecast), by = 'day')
FirstDayFcst<-debFcst+1
DataEpiVAR <- db %>%
mutate(R = log(REpiEstim/lag(REpiEstim,1))) %>%
mutate(cas = log(cas_sm/lag(cas_sm,1))) %>%
mutate(hosp = log(hosp_sm/lag(hosp_sm,1))) %>%
mutate(rea = log(rea_sm/lag(rea_sm,1))) %>%
mutate(dc = log(dc_sm/lag(dc_sm,1))) %>%
filter(date < LastObs-OutofSample) %>%
subset(select = c(R,cas,hosp,rea,dc)) %>%
na.omit %>%
ts()
# Estimation VAR
EpiVAR<-VAR(DataEpiVAR,
p=nlags,
type="trend")
summary(EpiVAR)
# Test de stabilité du VAR
if ( max(roots(EpiVAR))<1 ) {
print("EpiVAR is stationary")
print(paste("Max root =", round(max(roots(EpiVAR)) , 2) ))
} else {
print("EpiVAR is non stationary!")
print(paste("Max root =", round(max(roots(EpiVAR)) , 2) ))
exit()
}
# checkresiduals(EpiVAR$varresult$R)
# checkresiduals(EpiVAR$varresult$cas)
# checkresiduals(EpiVAR$varresult$hosp)
# checkresiduals(EpiVAR$varresult$rea)
# checkresiduals(EpiVAR$varresult$dc)
# Forecasts
Forecast<-predict(EpiVAR,
n.ahead = HorizonForecast,
pi = ConfidenceLevel,
dumvar = NULL)
# Plots forecasts
fcstR <-exp(cumsum(as.data.frame(Forecast$fcst$R)))
fcstR$date<- dateFcst
fcstRBind<-full_join(db,fcstR)
fcstRBind$fcst<-fcstRBind$fcst*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind$low<-fcstRBind$lower*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind$up<-fcstRBind$upper*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind<-filter(fcstRBind,fcstRBind$date>=as.Date(LastObs-LengthGraph))
gR<-ggplot(data=fcstRBind) +
geom_line(aes(x=date, y = REpiEstim, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up, fill="Intervalle de prévision"), alpha = 0.2)  +
geom_hline(yintercept = 1, size = 0.2) +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL , title = "Taux de reproduction effectif (Reff)")
fcstcas <-exp(cumsum(as.data.frame(Forecast$fcst$cas)))
fcstcas$date<-dateFcst
fcstcasBind<-full_join(db,fcstcas)
fcstcasBind$fcst<-fcstcasBind$fcst*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind$low<-fcstcasBind$lower*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind$up<-fcstcasBind$upper*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind<-filter(fcstcasBind,fcstcasBind$date>=as.Date(LastObs-LengthGraph))
gcas<-ggplot(data=fcstcasBind) +
geom_col(aes(x=date, y = cas), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = cas_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up, fill="Intervalle de prévision"), alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
scale_y_continuous(labels = label_number(suffix = " k", scale = 1e-3) ) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL , title = "Cas confirmés (date de prélèvement)")
fcsthosp <-exp(cumsum(as.data.frame(Forecast$fcst$hosp)))
fcsthosp$date<-dateFcst
fcsthospBind<-full_join(db,fcsthosp)
fcsthospBind$fcst<-fcsthospBind$fcst*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind$low<-fcsthospBind$lower*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind$up<-fcsthospBind$upper*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind<-filter(fcsthospBind,fcsthospBind$date>=as.Date(LastObs-LengthGraph))
ghosp<-ggplot(data=fcsthospBind) +
geom_col(aes(x=date, y = hosp), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = hosp_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL,  title = "Lits en hospitalisation conventionnelle")
fcstrea <-exp(cumsum(as.data.frame(Forecast$fcst$rea)))
fcstrea$date<-dateFcst
fcstreaBind<-full_join(db,fcstrea)
fcstreaBind$fcst<-fcstreaBind$fcst*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind$low<-fcstreaBind$lower*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind$up<-fcstreaBind$upper*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind<-filter(fcstreaBind,fcstreaBind$date>=as.Date(LastObs-LengthGraph))
grea<-ggplot(data=fcstreaBind) +
geom_col(aes(x=date, y = rea), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = rea_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL,y = NULL , title = "Lits en soins critiques")
fcstdc <-exp(cumsum(as.data.frame(Forecast$fcst$dc)))
fcstdc$date<-dateFcst
fcstdcBind<-full_join(db,fcstdc)
fcstdcBind$fcst<-fcstdcBind$fcst*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind$low<-fcstdcBind$lower*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind$up<-fcstdcBind$upper*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind<-filter(fcstdcBind,fcstdcBind$date>=as.Date(LastObs-LengthGraph))
gdc<-ggplot(data=fcstdcBind) +
geom_col(aes(x=date, y = dc), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = dc_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL, title = "Décès hospitaliers")
TitleGraph = paste("Projection EpiVAR à partir du ",FirstDayFcst," (Dernier point observé : ",LastObs,")\n",sep="")
gEpiVAR<-ggarrange(gR,gcas,ghosp,grea,gdc,
ncol=2,
nrow=3,
legend = "bottom",
common.legend = TRUE,
labels = "auto",
align="hv") %>%
annotate_figure( top = text_grob(TitleGraph,
just = "top",
face = "bold",
size = 12),
bottom = text_grob("Source: Santé Publique France. \nModèle et calculs : P. Aldama @paldama.",
hjust = 1,
x = 1,
face = "italic",
size = 10))
ggsave("./gEpiVAR.png", plot=gEpiVAR, bg="white", width = 7, height = 10)
print(gEpiVAR)
# Preparation du dataset
k<-2
OutofSample<-7*k
HorizonForecast<-7*k+3
LengthGraph <- 2*30 # longueur des graphiques
debFcst<-LastObsCas-OutofSample
dateFcst<-seq(from = as.Date(LastObsCas-OutofSample+1), to = as.Date(LastObsCas-OutofSample+HorizonForecast), by = 'day')
FirstDayFcst<-debFcst+1
DataEpiVAR <- db %>%
mutate(R = log(REpiEstim/lag(REpiEstim,1))) %>%
mutate(cas = log(cas_sm/lag(cas_sm,1))) %>%
mutate(hosp = log(hosp_sm/lag(hosp_sm,1))) %>%
mutate(rea = log(rea_sm/lag(rea_sm,1))) %>%
mutate(dc = log(dc_sm/lag(dc_sm,1))) %>%
filter(date < LastObs-OutofSample) %>%
subset(select = c(R,cas,hosp,rea,dc)) %>%
na.omit %>%
ts()
# Estimation VAR
EpiVAR<-VAR(DataEpiVAR,
p=nlags,
type="trend")
summary(EpiVAR)
# Test de stabilité du VAR
if ( max(roots(EpiVAR))<1 ) {
print("EpiVAR is stationary")
print(paste("Max root =", round(max(roots(EpiVAR)) , 2) ))
} else {
print("EpiVAR is non stationary!")
print(paste("Max root =", round(max(roots(EpiVAR)) , 2) ))
exit()
}
# checkresiduals(EpiVAR$varresult$R)
# checkresiduals(EpiVAR$varresult$cas)
# checkresiduals(EpiVAR$varresult$hosp)
# checkresiduals(EpiVAR$varresult$rea)
# checkresiduals(EpiVAR$varresult$dc)
# Forecasts
Forecast<-predict(EpiVAR,
n.ahead = HorizonForecast,
pi = ConfidenceLevel,
dumvar = NULL)
# Plots forecasts
fcstR <-exp(cumsum(as.data.frame(Forecast$fcst$R)))
fcstR$date<- dateFcst
fcstRBind<-full_join(db,fcstR)
fcstRBind$fcst<-fcstRBind$fcst*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind$low<-fcstRBind$lower*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind$up<-fcstRBind$upper*fcstRBind$REpiEstim[fcstRBind$date==debFcst]
fcstRBind<-filter(fcstRBind,fcstRBind$date>=as.Date(LastObs-LengthGraph))
gR<-ggplot(data=fcstRBind) +
geom_line(aes(x=date, y = REpiEstim, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up, fill="Intervalle de prévision"), alpha = 0.2)  +
geom_hline(yintercept = 1, size = 0.2) +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL , title = "Taux de reproduction effectif (Reff)")
fcstcas <-exp(cumsum(as.data.frame(Forecast$fcst$cas)))
fcstcas$date<-dateFcst
fcstcasBind<-full_join(db,fcstcas)
fcstcasBind$fcst<-fcstcasBind$fcst*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind$low<-fcstcasBind$lower*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind$up<-fcstcasBind$upper*fcstcasBind$cas_sm[db$date==debFcst]
fcstcasBind<-filter(fcstcasBind,fcstcasBind$date>=as.Date(LastObs-LengthGraph))
gcas<-ggplot(data=fcstcasBind) +
geom_col(aes(x=date, y = cas), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = cas_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up, fill="Intervalle de prévision"), alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
scale_y_continuous(labels = label_number(suffix = " k", scale = 1e-3) ) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL , title = "Cas confirmés (date de prélèvement)")
fcsthosp <-exp(cumsum(as.data.frame(Forecast$fcst$hosp)))
fcsthosp$date<-dateFcst
fcsthospBind<-full_join(db,fcsthosp)
fcsthospBind$fcst<-fcsthospBind$fcst*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind$low<-fcsthospBind$lower*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind$up<-fcsthospBind$upper*fcsthospBind$hosp_sm[db$date==debFcst]
fcsthospBind<-filter(fcsthospBind,fcsthospBind$date>=as.Date(LastObs-LengthGraph))
ghosp<-ggplot(data=fcsthospBind) +
geom_col(aes(x=date, y = hosp), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = hosp_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL,  title = "Lits en hospitalisation conventionnelle")
fcstrea <-exp(cumsum(as.data.frame(Forecast$fcst$rea)))
fcstrea$date<-dateFcst
fcstreaBind<-full_join(db,fcstrea)
fcstreaBind$fcst<-fcstreaBind$fcst*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind$low<-fcstreaBind$lower*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind$up<-fcstreaBind$upper*fcstreaBind$rea_sm[db$date==debFcst]
fcstreaBind<-filter(fcstreaBind,fcstreaBind$date>=as.Date(LastObs-LengthGraph))
grea<-ggplot(data=fcstreaBind) +
geom_col(aes(x=date, y = rea), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = rea_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL,y = NULL , title = "Lits en soins critiques")
fcstdc <-exp(cumsum(as.data.frame(Forecast$fcst$dc)))
fcstdc$date<-dateFcst
fcstdcBind<-full_join(db,fcstdc)
fcstdcBind$fcst<-fcstdcBind$fcst*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind$low<-fcstdcBind$lower*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind$up<-fcstdcBind$upper*fcstdcBind$dc_sm[db$date==debFcst]
fcstdcBind<-filter(fcstdcBind,fcstdcBind$date>=as.Date(LastObs-LengthGraph))
gdc<-ggplot(data=fcstdcBind) +
geom_col(aes(x=date, y = dc), fill="grey",alpha = 0.4) +
geom_line(aes(x=date, y = dc_sm, color = "Observé")) +
geom_line(aes(x=date, y = fcst, color = "Projection")) +
geom_ribbon(aes(x=date, ymin = low, ymax=up), fill="blue", alpha = 0.2)  +
scale_color_manual(name  ="", values = c("Observé" = "black", "Projection" = "blue")) +
scale_fill_manual(name = "", values = c("Intervalle de prévision" = "blue" )) +
theme_bw() + theme(plot.title = element_text(size = 11)) +
labs(x = NULL, y = NULL, title = "Décès hospitaliers")
TitleGraph = paste("Projection EpiVAR à partir du ",FirstDayFcst," (Dernier point observé : ",LastObs,")\n",sep="")
gEpiVARos<-ggarrange(gR,gcas,ghosp,grea,gdc,
ncol=2,
nrow=3,
legend = "bottom",
common.legend = TRUE,
labels = "auto",
align="hv") %>%
annotate_figure( top = text_grob(TitleGraph,
just = "top",
face = "bold",
size = 12),
bottom = text_grob("Source: Santé Publique France. \nModèle et calculs : P. Aldama @paldama.",
hjust = 1,
x = 1,
face = "italic",
size = 10))
ggsave("./gEpiVAROutOfSample.png", plot=gEpiVARos, bg="white", width = 7, height = 10)
print(gEpiVARos)
######################################
# IRF
######################################
download.file("https://raw.githubusercontent.com/anguyen1210/var-tools/master/R/extract_varirf.R",
"./extract_varirf.R")
source("./extract_varirf.R")
irf<-irf(EpiVAR,
impulse = c("R","cas","hosp","rea","dc"),
response = NULL,
n.ahead = 60,
ortho = TRUE,
cumulative = TRUE,
boot = TRUE,
ci = 0.90,
runs = 1000 )
multiple_varirf <- extract_varirf(irf) %>%
pivot_longer(
cols = !period,
names_to = c("type","impulse","response"),
names_pattern = "(.*)_(.*)_(.*)",
values_to = "values",
values_drop_na = TRUE
) %>%
pivot_wider(names_from = type, values_from = values)
gIRF<-multiple_varirf %>%
ggplot(aes(x=period, y=irf*100, ymin=lower*100, ymax=upper*100)) +
geom_hline(yintercept = 0, color="black") +
geom_ribbon(aes(fill=impulse), alpha=.1) +
geom_line(aes(color = impulse), size = 0.8) +
theme_bw() + scale_color_viridis(discrete=TRUE) + scale_fill_viridis(discrete=TRUE) +
ggtitle("Fonctions impulsion-réponse orthogonalisées du modèle EpiVAR")+
facet_grid(factor(impulse, levels = c("r","cas","hosp","rea","dc"))~factor(response, levels = c("r","cas","hosp","rea","dc")),scale="free")+
scale_x_continuous(sec.axis = sec_axis(~ . , name = "Réponses des variables", breaks = NULL, labels = NULL)) +
scale_y_continuous(sec.axis = sec_axis(~ . , name = "Impulsions", breaks = NULL, labels = NULL)) +
theme(plot.title = element_text(size = 11,face="bold", hjust=0.5),
axis.title.y = element_text(size=11)) +
labs(x = "jours",
y = "écart en %",
fill = "Chocs",
color = "Chocs",
caption = "Les intervalles de confiance sont les 5ème et 95ème percentiles de la distribution obtenue par boostrapp. \nSource: Santé Publique France. \nModèle et calculs : P. Aldama @paldama.")
ggsave("./gIRF.png",plot=gIRF,bg="white",width=8,height = 8)
print(gIRF)
#################################################
# Forecast Error Variance Decomposition
#################################################
fevd <- fevd(EpiVAR,
n.ahead = 60)
fevd_df <- as.data.frame(lapply(fevd, unlist)) %>%
mutate(period = c(1:60) ) %>%
pivot_longer(
cols = !period,
names_to = c("response","impulse"),
names_pattern = "(.*)\\.(.*)",
values_to = "values",
values_drop_na = TRUE
)
gFEVD <- fevd_df %>%
ggplot(aes(x=period,y=values,fill=impulse)) +
geom_area(stat = "identity",
position = "stack") +
theme_bw() + scale_fill_viridis(discrete = TRUE) +
ggtitle("Décomposition de la variance de l'erreur de prévision selon les chocs dans le modèle EpiVAR")+
facet_wrap(factor(response, levels = c("R","cas","hosp","rea","dc"))~.)+
theme(plot.title = element_text(size = 11,face="bold", hjust=0.5),
axis.title.y = element_text(size=11)) +
labs(x = "jours",
y = "% de la variance expliquée",
fill = "Chocs",
caption = "Source: Santé Publique France. \nModèle et calculs : P. Aldama @paldama.")
print(gFEVD)
ggsave("./gFEVD.png",plot=gFEVD,bg="white",width=8,height = 8)
source("~/Documents/Covid/EpiVARinR.R")
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
