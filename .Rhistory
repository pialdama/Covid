file.exists("./extract_varirf.R")
setwd("~/Documents/Covid")
setwd("~/Documents/Covid")
file.exists("./extract_varirf.R")
~file.exists("extract_varirf.R")
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
install.packages("fGarch")
?pacf
?pacf(EpiVAR$R*residuals)
?pacf(EpiVAR$R$residuals)
pacf(EpiVAR$R$residuals)
pacf(as.ts(EpiVAR$R$residuals)
)
EpiVAR$R$residuals
EpiVAR$R$residual
EpiVAR$residual
EpiVAR
EpiVAR$varresult$R$residuals
pacf(EpiVAR$varresult$R$residuals)
?pacf
acf(EpiVAR$varresult$R$residuals^2)
acf(EpiVAR$varresult$cas$residuals^2)
acf(EpiVAR$varresult$hosp$residuals^2)
acf(EpiVAR$varresult$rea$residuals^2)
acf(EpiVAR$varresult$dc$residuals^2)
acf(EpiVAR$varresult$R^2)
pacf(EpiVAR$datamat$R^2)
pacf(EpiVAR$datamat$cas^2)
pacf(EpiVAR$datamat$hosp^2)
acf(EpiVAR$datamat$cas^2)
acf(EpiVAR$datamat$cas)
?fGarch
install.package("rmgarch")
install.packages("rmgarch")
?rmgarch
library(rmgarch)
?rmgarch
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
print(EpiVAR is non stationary)
print("EpiVAR is non stationary")
print(as.string(EpiVAR is non stationary)
print(as.string(EpiVAR is non stationary))
max(roots(EpiVAR)
)
roots(EpiVAR)
VARFirstDiff <- 1
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
# Parametres: NB de lags du VAR et niveau de l'intervalle de confiance pour la prevision
nlags <- 28
ConfidenceLevel <- 0.9
# Preparation du dataset
OutofSample <- 0
HorizonForecast <- 7 * (2)
LengthGraph <- 4 * 30 # longueur des graphiques
debFcst <- LastObsCas - OutofSample
dateFcst <-
seq(
from = as.Date(debFcst - OutofSample + 1),
to = as.Date(debFcst - OutofSample + HorizonForecast),
by = 'day'
)
FirstDayFcst <- debFcst + 1
if (VARFirstDiff==1){
DataEpiVAR <- db %>%
mutate(R =  log(R_sm/lag(R_sm, 1)))  %>%
mutate(cas = log(cas_sm / lag(cas_sm, 1))) %>%
mutate(hosp = log(hosp_sm / lag(hosp_sm, 1))) %>%
mutate(rea = log(rea_sm / lag(rea_sm, 1))) %>%
mutate(dc = log(dc_sm / lag(dc_sm, 1))) %>%
filter(date < LastObs - OutofSample) %>%
subset(select = c(R, cas, hosp, rea, dc)) %>%
na.omit %>%
ts()
} else {
DataEpiVAR <- db %>%
mutate(R =  log(R_sm))  %>%
mutate(cas = log(cas_sm )) %>%
mutate(hosp = log(hosp_sm)) %>%
mutate(rea = log(rea_sm )) %>%
mutate(dc = log(dc_sm )) %>%
filter(date < LastObs - OutofSample) %>%
subset(select = c(R, cas, hosp, rea, dc)) %>%
na.omit %>%
ts()
}
VARselect(DataEpiVAR,lag.max = 100, type=c("none"))
OptimalLag<-VARselect(DataEpiVAR,lag.max = 100, type=c("none"))
OptimalLag$selection
max(OptimalLag$selection)
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
gc()
q()
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
fanchart
fanchar(Forecast)
fanchart(Forecast)
fanchart(Forecast,colors="red")
fancharts<-(Forecast,colors="red"
fancharts<-fancharts(Forecast,colors="red")
fancharts<-fanchart(Forecast,colors="red")
fancharts<-fanchart(Forecast,colors="red")
fanchart(Forecast,colors="red")
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
rmarkdown::render(input = "OutputEpiVAR.Rmd", output_format = "html_document")
rmarkdown::render(input = "OutputEpiVAR.Rmd", output_format = "pdf_document")
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
source("~/Documents/Covid/EpiVARinR.R", echo=TRUE)
